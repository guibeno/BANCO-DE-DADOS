CREATE TABLE cadastro_equipes (
    id_equipe INTEGER PRIMARY KEY,
    nome VARCHAR(40),
    info_desportiva TEXT,
    info_esportiva TEXT
);

CREATE TABLE cadastro_jogadores (
    id_jogadores INTEGER PRIMARY KEY,
    nome VARCHAR(50),
    posicao VARCHAR(20),
    data_nascimento DATE,
    id_equipe INTEGER,
    FOREIGN KEY (id_equipe) REFERENCES cadastro_equipes(id_equipe)
);

CREATE TABLE partidas (
    id_partida INTEGER PRIMARY KEY AUTOINCREMENT,
    turno VARCHAR(15),
    data DATE,
    local VARCHAR(80),
    id_equipe_casa INTEGER,
    id_equipe_visitante INTEGER,
    FOREIGN KEY (id_equipe_casa) REFERENCES cadastro_equipes(id_equipe),
    FOREIGN KEY (id_equipe_visitante) REFERENCES cadastro_equipes(id_equipe)
);

CREATE TABLE jogadores_partidas (
    id_jogadores_partidas INTEGER PRIMARY KEY AUTOINCREMENT,
    id_partida INTEGER,
    id_jogador INTEGER,
    gols INTEGER DEFAULT 0,
    cartoes INTEGER DEFAULT 0,
    FOREIGN KEY (id_jogador) REFERENCES cadastro_jogadores(id_jogadores),
    FOREIGN KEY (id_partida) REFERENCES partidas(id_partida),
    UNIQUE(id_jogador, id_partida)
);


INSERT INTO cadastro_equipes (nome)
VALUES ('Equipe inter'),
       ('Equipe gremio'),
       ('Equipe cruzeiro'),
       ('Equipe flamengo');


INSERT INTO cadastro_jogadores (nome, data_nascimento, id_equipe)
VALUES
    -- Equipe 1
    ('Carlos Silva', '1995-01-01', 1),
    ('Lucas Oliveira', '1994-05-15', 1),
    ('Felipe Costa', '1992-11-20', 1),
    ('Rafael Santos', '1996-07-25', 1),
    ('Gustavo Almeida', '1993-09-13', 1),
    ('Matheus Pereira', '1990-12-10', 1),
    ('João Rodrigues', '1994-02-17', 1),
    ('Eduardo Martins', '1995-06-30', 1),
    ('Thiago Souza', '1997-01-22', 1),
    ('Vinícius Lima', '1991-04-05', 1),
    ('André Costa', '1993-08-30', 1),
    ('Henrique Santos', '1996-10-11', 1),

    -- Equipe 2
    ('Vítor Silva', '1993-11-17', 2),
    ('Bruno Pereira', '1995-03-12', 2),
    ('Marcos Santos', '1994-01-19', 2),
    ('João Henrique', '1996-08-07', 2),
    ('Gabriel Costa', '1992-05-22', 2),
    ('Ricardo Alves', '1993-09-10', 2),
    ('Daniel Oliveira', '1990-02-18', 2),
    ('Luiz Carlos', '1991-11-14', 2),
    ('Rodrigo Pereira', '1995-04-26', 2),
    ('Caio Martins', '1994-12-05', 2),
    ('Rogério Souza', '1996-06-13', 2),
    ('Lucas Rocha', '1993-07-19', 2),

    -- Equipe 3
    ('Lucas Costa', '1992-01-11', 3),
    ('Vinícius Rocha', '1994-09-17', 3),
    ('Felipe Martins', '1996-07-07', 3),
    ('Ricardo Oliveira', '1993-06-23', 3),
    ('Gustavo Lima', '1992-04-04', 3),
    ('Thiago Almeida', '1990-11-28', 3),
    ('José Silva', '1995-12-12', 3),
    ('Leandro Costa', '1994-02-06', 3),
    ('Marcelo Souza', '1993-08-08', 3),
    ('Lucas Santos', '1991-05-17', 3),
    ('Felipe Rocha', '1996-01-30', 3),
    ('Rafael Lima', '1992-11-18', 3),

    -- Equipe 4
    ('Guilherme Oliveira', '1995-09-22', 4),
    ('Anderson Silva', '1993-03-21', 4),
    ('Ricardo Rocha', '1990-07-02', 4),
    ('Gabriel Santos', '1994-04-25', 4),
    ('Lucas Oliveira', '1996-02-03', 4),
    ('Diego Rocha', '1993-10-16', 4),
    ('Paulo Alves', '1992-03-05', 4),
    ('Eduardo Silva', '1991-12-14', 4),
    ('Thiago Lima', '1995-07-17', 4),
    ('Rafael Costa', '1994-09-09', 4),
    ('Fernando Pereira', '1990-08-22', 4),
    ('Leandro Silva', '1993-11-30', 4);



-- Inserir as partidas de ida e volta entre todas as equipes
INSERT INTO partidas (turno, data, local, id_equipe_casa, id_equipe_visitante)
SELECT
    CASE
        WHEN t1.id_equipe < t2.id_equipe THEN 'Ida'
        ELSE 'Volta'
    END AS turno,

    DATE('2025-01-01', '+' || (ROW_NUMBER() OVER (ORDER BY t1.id_equipe, t2.id_equipe) * 7) || ' days') AS data,

    'Estádio Municipal' AS local,
    t1.id_equipe AS id_equipe_casa,
    t2.id_equipe AS id_equipe_visitante
FROM
    cadastro_equipes t1
CROSS JOIN
    cadastro_equipes t2
WHERE
    t1.id_equipe < t2.id_equipe;

-- Adicionar a partida de volta
INSERT INTO partidas (turno, data, local, id_equipe_casa, id_equipe_visitante)
SELECT
    CASE
        WHEN t1.id_equipe > t2.id_equipe THEN 'Ida'
        ELSE 'Volta'
    END AS turno,
    DATE('2025-01-01', '+' || (ROW_NUMBER() OVER (ORDER BY t1.id_equipe, t2.id_equipe) * 7) || ' days') AS data,
    'Estádio Municipal' AS local,
    t2.id_equipe AS id_equipe_casa,
    t1.id_equipe AS id_equipe_visitante
FROM
    cadastro_equipes t1
CROSS JOIN
    cadastro_equipes t2
WHERE
    t1.id_equipe < t2.id_equipe;



-- Passo 1: Selecionar aleatoriamente 6 cartões vermelhos em 3 partidas diferentes
WITH partidas_aleatorias AS (
    SELECT id_partida
    FROM partidas
    ORDER BY RANDOM()
    LIMIT 3
),
jogadores_aleatorios AS (
    SELECT jp.id_jogador, p.id_partida
    FROM jogadores_partidas jp
    JOIN partidas p ON jp.id_partida = p.id_partida
    WHERE p.id_partida IN (SELECT id_partida FROM partidas_aleatorias)
    ORDER BY RANDOM()
    LIMIT 6
)
UPDATE jogadores_partidas
SET cartoes = 1
WHERE id_jogador IN (SELECT id_jogador FROM jogadores_aleatorios);

-- Passo 2: Selecionar aleatoriamente 1 jogador em uma partida diferente para cartão vermelho
WITH partida_diferente AS (
    SELECT id_partida
    FROM partidas
    WHERE id_partida NOT IN (SELECT id_partida FROM partidas)
    ORDER BY RANDOM()
    LIMIT 1
),
jogador_diferente AS (
    SELECT jp.id_jogador
    FROM jogadores_partidas jp
    JOIN partidas p ON jp.id_partida = p.id_partida
    WHERE p.id_partida IN (SELECT id_partida FROM partida_diferente)
    ORDER BY RANDOM()
    LIMIT 1
)
UPDATE jogadores_partidas
SET cartoes = 1
WHERE id_jogador IN (SELECT id_jogador FROM jogador_diferente);




-- Passo 1: Identificar as partidas em que nenhum jogador recebeu cartão
-- Passo 1: Identificar as partidas em que nenhum jogador recebeu cartão
WITH partidas_sem_cartao AS (
    SELECT p.id_partida
    FROM partidas p
    LEFT JOIN jogadores_partidas jp ON p.id_partida = jp.id_partida
    WHERE jp.cartoes = 0 OR jp.cartoes IS NULL
    GROUP BY p.id_partida
    HAVING COUNT(jp.id_jogador) = COUNT(CASE WHEN jp.cartoes IS NULL THEN 1 ELSE NULL END)
),

-- Passo 2: Selecionar dois jogadores aleatórios da equipe visitante para cada partida sem cartões
jogadores_visitante AS (
    SELECT jp.id_jogador, jp.id_partida
    FROM jogadores_partidas jp
    JOIN partidas p ON jp.id_partida = p.id_partida
    JOIN cadastro_jogadores cj ON cj.id_jogadores = jp.id_jogador -- Junta com cadastro_jogadores para pegar o id_equipe
    WHERE p.id_partida IN (SELECT id_partida FROM partidas_sem_cartao)
    AND cj.id_equipe = p.id_equipe_visitante -- Relacionando com o id_equipe_visitante
    ORDER BY RANDOM()
    LIMIT 2
)

-- Passo 3: Atualizar o número de gols para os dois jogadores aleatórios da equipe visitante
UPDATE jogadores_partidas
SET gols = gols + 1
WHERE id_jogador IN (SELECT id_jogador FROM jogadores_visitante);
